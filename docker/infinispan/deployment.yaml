apiVersion: v1
kind: ConfigMap
metadata:
  name: infini-cache-configuration
data:
  infinispan.xml: |-
    <infinispan
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns:server="urn:infinispan:server:11.0"
            xmlns:jdbc="urn:infinispan:config:store:jdbc:11.0"
            xsi:schemaLocation="urn:infinispan:config:11.0 https://infinispan.org/schemas/infinispan-config-11.0.xsd
                                urn:infinispan:server:11.0 https://infinispan.org/schemas/infinispan-server-11.0.xsd
    urn:infinispan:config:store:jdbc:11.0 http://www.infinispan.org/schemas/infinispan-cachestore-jdbc-config-11.0.xsd"
            xmlns="urn:infinispan:config:11.0">


        <cache-container name="default" statistics="true">

            <transport cluster="${infinispan.cluster.name}" stack="kubernetes"
                       node-name="${infinispan.node.name:}"/>
            <local-cache name="local"/>
            <invalidation-cache name="invalidation"/>
            <replicated-cache name="replicated"/>
            <distributed-cache name="distributed"/>
            <local-cache name="testme">
                <encoding>
                    <key media-type="application/x-java-object; type=java.lang.String"/>
                    <value media-type="application/json; charset=UTF-8"/>
                </encoding>
                <jdbc:string-keyed-jdbc-store
                        preload="true"
                        purge="false"
                        shared="false"
                >
                    <jdbc:data-source jndi-url="jdbc/infinispan"/>
                    <jdbc:string-keyed-table prefix="JDG">
                        <jdbc:id-column name="ID" type="VARCHAR(255)"/>
                        <jdbc:data-column name="DATA" type="VARBINARY(MAX)"/>
                        <jdbc:timestamp-column name="TS" type="BIGINT"/>
                        <jdbc:segment-column name="S" type="INT"/>
                    </jdbc:string-keyed-table>
                </jdbc:string-keyed-jdbc-store>
            </local-cache>
            <invalidation-cache name="invalidtest">
                <encoding>
                    <key media-type="application/x-java-object; type=java.lang.String"/>
                    <value media-type="application/json; charset=UTF-8"/>
                </encoding>

                <jdbc:string-keyed-jdbc-store
                        preload="true"
                        purge="false"
                        shared="true"
                >
                    <jdbc:data-source jndi-url="jdbc/infinispan"/>
                    <jdbc:string-keyed-table prefix="JDG" >
                        <jdbc:id-column name="ID" type="VARCHAR(255)"/>
                        <jdbc:data-column name="DATA" type="VARBINARY(MAX)"/>
                        <jdbc:timestamp-column name="TS" type="BIGINT"/>
                        <jdbc:segment-column name="S" type="INT"/>
                    </jdbc:string-keyed-table>
                </jdbc:string-keyed-jdbc-store>
            </invalidation-cache>
        </cache-container>
        <server xmlns="urn:infinispan:server:11.0">
            <interfaces>
                <interface name="public">
                    <inet-address value="${infinispan.bind.address:127.0.0.1}"/>
                </interface>
            </interfaces>
            <socket-bindings default-interface="public" port-offset="${infinispan.socket.binding.port-offset:0}">
                <socket-binding name="default" port="${infinispan.bind.port:11222}"/>
                <socket-binding name="memcached" port="11221"/>
            </socket-bindings>
            <security>
                <security-realms>
                    <security-realm name="default">
                        <!-- Uncomment to enable TLS on the realm -->
                        <!-- server-identities>
                           <ssl>
                              <keystore path="application.keystore" relative-to="infinispan.server.config.path"
                                        keystore-password="password" alias="server" key-password="password"
                                        generate-self-signed-certificate-host="localhost"/>
                           </ssl>
                        </server-identities-->
                        <properties-realm groups-attribute="Roles">
                            <user-properties path="users.properties" relative-to="infinispan.server.config.path"
                                             plain-text="true"/>
                            <group-properties path="groups.properties" relative-to="infinispan.server.config.path"/>
                        </properties-realm>
                    </security-realm>
                </security-realms>
            </security>
            <data-sources>
                <data-source name="sqlInfinispan" jndi-name="jdbc/infinispan" statistics="true">
                    <connection-factory driver="com.microsoft.sqlserver.jdbc.SQLServerDriver"
                                        username="sa"
                                        password="MssqlPass123"
                                        url="jdbc:sqlserver://mssql-db-svc.default.svc.cluster.local:1433"
                                        new-connection-sql="SELECT 1"
                                        transaction-isolation="READ_COMMITTED">
                        <connection-property name="databaseName">infinispan</connection-property>
                    </connection-factory>
                    <connection-pool
                            initial-size="8"
                            max-size="16"
                            min-size="3"
                            background-validation="1000"
                            idle-removal="1"
                            blocking-timeout="1000"
                            leak-detection="10000"/>
                </data-source>

            </data-sources>
            <endpoints socket-binding="default" security-realm="default">
                <hotrod-connector name="hotrod"/>
                <rest-connector name="rest"/>
            </endpoints>
        </server>
    </infinispan>
  users.properties: |-
    #$REALM_NAME=default$
    #$ALGORITHM=encrypted$
    #Mon Sep 07 10:58:05 AEST 2020
    camel=scram-sha-1\:BYGcIAyA3IWH6uqi3Ri7fSjzwPRz1cgnCdT/mtJ68RELIj5QfA\=\=;scram-sha-256\:BYGcIAwj3C7nwGBgb5NRLWdjH1kahZnDEY4gxniID41JDIQMlxgYxd/KltfwFFSB/w\=\=;scram-sha-384\:BYGcIAxCIymtMkD8EXfDhfpykxTmYT24tn+W3W5QjqmPWGINr67kZeP4BhMZeJU3V+Les9cQ1GWCCuhvGPnYYac\=;scram-sha-512\:BYGcIAwJiLdUeZguvli+JzF/Jx914YQVIPXSBdDl/VfD3UXaZG1daZr97k3+5GJ9pvKIseubI1Cbr1HBqLVNdmkhl9pJ2+oWfs5yC4cryXrZ;digest-md5\:AgVjYW1lbAdkZWZhdWx0bztWphDOYZnBUuE9/+OGuA\=\=;digest-sha\:AgVjYW1lbAdkZWZhdWx0C3t2CZEG65dj+7QIgP+KrMC8AZ4\=;digest-sha-256\:AgVjYW1lbAdkZWZhdWx0tBqVvLXk6wlrX2Gc4iLEGYe9kApyx3a0+FHrKCXiIHs\=;digest-sha-384\:AgVjYW1lbAdkZWZhdWx0XAGshWwj2bMJGB5AQHzffTFJAtH70a1QIGLbVWEiOcQCj5uzoWSKtIt2glc7a4sq;digest-sha-512\:AgVjYW1lbAdkZWZhdWx0r+nflzz3xF0Lzcy4mvoe7RrFOfPMfi8DJOkdgNzeNbl01KQFkN37+PdCtgiTj4A+i1x0kuSz9wwDEv75fQhSiw\=\=;
    myuser=scram-sha-1\:BYGcIAwplP1uV/8bBAugDrNmnMz0/WcGv8p+VNI6FKrYA2b5zA\=\=;scram-sha-256\:BYGcIAzrhUEdE0t92ucnV0qKwBOaWH/sG3mbYLmU770/gRlToK+kXKwTWxDxN9Jucw\=\=;scram-sha-384\:BYGcIAzvMyiYduLTIwFscDDn3WZTWpBHm5nXsyh7IardFKqFBPPu310tiHkzAXbwnooT9GhPVe7ts+4/Rh3fOjo\=;scram-sha-512\:BYGcIAz5cJ6S1VL0HlhsomoJC37cSeKC827kXnFi8KI9VICkQs5uvRNx35SeHW4xQgLM5H25wcBFjTnPTMHj4PYVoFKWi0ac5zJuMhois8Xa;digest-md5\:AgZteXVzZXIHZGVmYXVsdJou5jnY0WZDL+fB2zXe74o\=;digest-sha\:AgZteXVzZXIHZGVmYXVsdMP1ST6ylxyCGC3bFr4L4/2x9miI;digest-sha-256\:AgZteXVzZXIHZGVmYXVsdB+o37rtihdv56mbSahy0aeCRak3x7qnimCsZwQOE4ug;digest-sha-384\:AgZteXVzZXIHZGVmYXVsdFJDzN193Rz47RSh6ccUpOI4kljj0J5Rr/lKorYpUzAN0u94alpt+xlV9wlr+wB++A\=\=;digest-sha-512\:AgZteXVzZXIHZGVmYXVsdJ73OUJ3Ifwe+MB9qKUhMNxrCX7oR/V6OPZqqdx0qYLGGG4tLYgBeB9LVz61GfcgXhpgLnFjjwJVyjUaUSG+OK0\=;


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infini-cache
  labels:
    app: infini-cache
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app: infini-cache
  template:
    metadata:
      labels:
        app: infini-cache
    spec:
      containers:
      - name: infini-cache
        image: localhost:5000/infini-cache:v1.0.11
        imagePullPolicy: Always
        command: [ "/opt/infinispan/bin/server.sh" ]
        args: [ "-Djboss.default.jgroups.stack=kubernetes" ]
        env:
        - name: JAVA_OPTIONS
          value: "-Djgroups.dns.query=infini-cache.default.svc.cluster.local"
        ports:
        - containerPort: 11222
          name: http
          protocol: TCP
        volumeMounts:
          - name: infinispan-config-volume
            mountPath: /opt/infinispan/server/conf/infinispan.xml
            subPath: infinispan.xml
      volumes:
        - name: infinispan-config-volume
          configMap:
             name: infini-cache-configuration
---  
apiVersion: v1
kind: Service
metadata:
  name: infini-cache
  labels:
    monitoring: enabled
spec:
  clusterIP: None
  ports:
  - protocol: TCP
    port: 11222
    name: http
  selector:
    app: infini-cache


 
   
   
    