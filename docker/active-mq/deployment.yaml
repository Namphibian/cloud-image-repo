apiVersion: v1
kind: ConfigMap
metadata:
  name: amq-config
data:
  activemq.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor
    	license agreements. See the NOTICE file distributed with this work for additional
    	information regarding copyright ownership. The ASF licenses this file to
    	You under the Apache License, Version 2.0 (the "License"); you may not use
    	this file except in compliance with the License. You may obtain a copy of
    	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
    	by applicable law or agreed to in writing, software distributed under the
    	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
    	OF ANY KIND, either express or implied. See the License for the specific
    	language governing permissions and limitations under the License. -->
    <!-- START SNIPPET: example -->
    <!-- FAR OUT WAY OUT -->
    <beans xmlns="http://www.springframework.org/schema/beans"
    	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    	<!-- Allows us to use system properties as variables in this configuration
    		file -->
    	<bean
    		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    		<property name="locations">
    			<value>file:${activemq.conf}/credentials.properties</value>
    		</property>
    	</bean>

    	<!-- Allows accessing the server log -->
    	<bean id="logQuery"
    		class="io.fabric8.insight.log.log4j.Log4jLogQuery" lazy-init="false"
    		scope="singleton" init-method="start" destroy-method="stop">
    	</bean>
    	<!-- See the link below for more information regarding the connection pool
    		properties. https://commons.apache.org/proper/commons-dbcp/configuration.html -->
    	<bean id="mssql-ds"
    		class="org.apache.commons.dbcp2.BasicDataSource"
    		destroy-method="close">
    		<property name="driverClassName"
    			value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
    		<property name="url"
    			value="jdbc:sqlserver://${amq_db_host}:${amq_db_port};database=${amq_db_name};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30" />
    		<property name="username" value="${amq_db_uid}" />
    		<property name="password" value="${amq_db_pwd}" />
    		<property name="poolPreparedStatements"
    			value="${amq_db_poolpreparedstatements}" />
    		<property name="initialSize"
    			value="${amq_db_initialsize}" />
    		<property name="maxTotal" value="${amq_db_maxtotal}" />
    		<property name="maxIdle" value="${amq_db_maxidle}" />
    		<property name="minIdle" value="${amq_db_minidle}" />
    		<property name="maxWaitMillis"
    			value="${amq_db_maxwaitmillis}" />
    		<property name="validationQuery"
    			value="${amq_db_validationquery}" />
    		<property name="validationQueryTimeout"
    			value="${amq_db_validationquerytimeout}" />
    		<property name="testOnBorrow"
    			value="${amq_db_testonborrow}" />
    		<property name="testWhileIdle"
    			value="${amq_db_testonborrow}" />
    		<property name="timeBetweenEvictionRunsMillis"
    			value="${amq_db_timebetweenevictionrunsmillis}" />
    		<property name="numTestsPerEvictionRun"
    			value="${amq_db_numtestsperevictionrun}" />

    	</bean>
    	<!-- The <broker> element is used to configure the ActiveMQ broker. -->
    	<broker xmlns="http://activemq.apache.org/schema/core"
    		brokerName="localhost" dataDirectory="${activemq.data}" useJmx="true" schedulerSupport="true">

    		<destinationPolicy>
    			<policyMap>
    				<policyEntries>
    					<policyEntry topic=">">
    						<!-- The constantPendingMessageLimitStrategy is used to prevent slow
    							topic consumers to block producers and affect other consumers by limiting
    							the number of messages that are retained For more information, see: http://activemq.apache.org/slow-consumer-handling.html -->
    						<pendingMessageLimitStrategy>
    							<constantPendingMessageLimitStrategy
    								limit="1000" />
    						</pendingMessageLimitStrategy>
    					</policyEntry>
    				</policyEntries>
    			</policyMap>
    		</destinationPolicy>


    		<!-- The managementContext is used to configure how ActiveMQ is exposed
    			in JMX. By default, ActiveMQ uses the MBean server that is started by the
    			JVM. For more information, see: http://activemq.apache.org/jmx.html -->
    		<managementContext>
    			<managementContext createConnector="false" />
    		</managementContext>

    		<!-- Configure message persistence for the broker. The default persistence
    			mechanism is the KahaDB store (identified by the kahaDB tag). For more information,
    			see: http://activemq.apache.org/persistence.html -->
    			<!-- <kahaDB directory="${activemq.data}/kahadb"/> -->
            <!--
    	     <persistenceAdapter>
    			<kahaDB directory="${activemq.data}/kahadb"/>
    		</persistenceAdapter>


    		<persistenceAdapter>
    			<jdbcPersistenceAdapter
    				dataDirectory="${activemq.base}/data" dataSource="#mssql-ds"
    				createTablesOnStartup="true" lockKeepAlivePeriod="5000">
    				<adapter>
    					<transact-jdbc-adapter />
    				</adapter>
    				<locker>
    					<lease-database-locker leaseHolderId="ActiveMQLock" lockAcquireSleepInterval="10000" />
    				</locker>
    			</jdbcPersistenceAdapter>
    		</persistenceAdapter>
            -->

            <persistenceFactory>
    		  <journalPersistenceAdapterFactory
    				journalLogFiles="5"
    				dataDirectory="${activemq.base}/data"
    				dataSource="#mssql-ds"
    				useDatabaseLock="false"
    				useDedicatedTaskRunner="false"
    				checkpointInterval="10000"/>
    		</persistenceFactory>

    		<!-- The systemUsage controls the maximum amount of space the broker will
    			use before disabling caching and/or slowing down producers. For more information,
    			see: http://activemq.apache.org/producer-flow-control.html -->
    		<systemUsage>
    			<systemUsage>
    				<memoryUsage>
    					<memoryUsage percentOfJvmHeap="80" />
    				</memoryUsage>
    				<storeUsage>
    					<storeUsage limit="100 gb" />
    				</storeUsage>
    				<tempUsage>
    					<tempUsage limit="50 gb" />
    				</tempUsage>
    			</systemUsage>
    		</systemUsage>

            <!-- NOTE -->

    		<!-- The transport connectors expose ActiveMQ over a given protocol to
    			clients and other brokers. For more information, see: http://activemq.apache.org/configuring-transports.html -->
    		<transportConnectors>
    			<!-- DOS protection, limit concurrent connections to 1000 and frame size
    				to 100MB -->
    			<transportConnector name="openwire"
    				uri="tcp://0.0.0.0:61616?maximumConnections=${amq_jms_max_connections}&amp;wireFormat.maxFrameSize=${amq_jms_wire_format_max_frame_size}" />

    			<!--
    				<transportConnector name="openwire"
    				uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600" />
    				<transportConnector name="amqp" uri="amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
    				<transportConnector name="stomp" uri="stomp://0.0.0.0:61613?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
    				<transportConnector name="mqtt" uri="mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
    				<transportConnector name="ws" uri="ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/> -->
    		</transportConnectors>

    		<!-- destroy the spring context on shutdown to stop jetty -->
    		<shutdownHooks>
    			<bean xmlns="http://www.springframework.org/schema/beans"
    				class="org.apache.activemq.hooks.SpringContextHook" />
    		</shutdownHooks>

    	</broker>

    	<!-- Enable web consoles, REST and Ajax APIs and demos The web consoles
    		requires by default login, you can disable this in the jetty.xml file Take
    		a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details -->
    	<import resource="jetty.xml" />

    </beans>
    <!-- END SNIPPET: example -->

  env: |-
    #!/bin/sh
    # ------------------------------------------------------------------------
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # ------------------------------------------------------------------------
    #
    # Configuration file for running Apache Active MQ as standalone provider.
    #
    # This file overwrites the predefined settings of the sysv init-script.
    # You can also use alternate location for default settings -
    # invoke the init-script without a argument an review help section "Configuration of this script"
    # /etc/default/activemq <activemq user home>/.activemqrc <activemq installation dir>/bin/env

    # Active MQ installation dirs
    # ACTIVEMQ_HOME="<Installationdir>/"
    # ACTIVEMQ_BASE="$ACTIVEMQ_HOME"
    # ACTIVEMQ_CONF="$ACTIVEMQ_BASE/conf"
    # ACTIVEMQ_DATA="$ACTIVEMQ_BASE/data"
    # ACTIVEMQ_TMP="$ACTIVEMQ_BASE/tmp"

    # Set jvm memory configuration (minimal/maximum amount of memory)
    ACTIVEMQ_OPTS_MEMORY="-Xms$amq_start_heap -Xmx$amq_max_heap"

    if [ -z "$ACTIVEMQ_OPTS" ] ; then
        ACTIVEMQ_OPTS="$ACTIVEMQ_OPTS_MEMORY -javaagent:/jmx/jmx_prometheus_javaagent-0.12.0.jar=8080:/jmx/config.yaml -Djava.util.logging.config.file=logging.properties  -Djava.security.auth.login.config=$ACTIVEMQ_CONF/login.config -Dhawtio.realm=activemq -Dhawtio.role=admins -Dhawtio.rolePrincipalClasses=org.apache.activemq.jaas.GroupPrincipal"
    fi

    if [ -z "$ACTIVEMQ_OUT" ]; then
       ACTIVEMQ_OUT="/dev/null"
    fi

    # Uncomment to enable audit logging
    #ACTIVEMQ_OPTS="$ACTIVEMQ_OPTS -Dorg.apache.activemq.audit=true"

    # Set jvm jmx configuration
    # This enables jmx access over a configured jmx-tcp-port.
    # You have to configure the first four settings if you run a ibm jvm, caused by the
    # fact that IBM's jvm does not support VirtualMachine.attach(PID).
    # JMX access is needed for quering a running activemq instance to gain data or to
    # trigger management operations.
    #
    # Example for ${ACTIVEMQ_CONF}/jmx.access:
    # ---
    # # The "monitorRole" role has readonly access.
    # # The "controlRole" role has readwrite access.
    # monitorRole readonly
    # controlRole readwrite
    # ---
    #
    # Example for ${ACTIVEMQ_CONF}/jmx.password:
    # ---
    # # The "monitorRole" role has password "abc123".
    # # # The "controlRole" role has password "abcd1234".
    # monitorRole abc123
    # controlRole abcd1234
    # ---
    #
    # ACTIVEMQ_SUNJMX_START="$ACTIVEMQ_SUNJMX_START -Dcom.sun.management.jmxremote.port=11099 "
    # ACTIVEMQ_SUNJMX_START="$ACTIVEMQ_SUNJMX_START -Dcom.sun.management.jmxremote.password.file=${ACTIVEMQ_CONF}/jmx.password"
    # ACTIVEMQ_SUNJMX_START="$ACTIVEMQ_SUNJMX_START -Dcom.sun.management.jmxremote.access.file=${ACTIVEMQ_CONF}/jmx.access"
    # ACTIVEMQ_SUNJMX_START="$ACTIVEMQ_SUNJMX_START -Dcom.sun.management.jmxremote.ssl=false"
    ACTIVEMQ_SUNJMX_START="$ACTIVEMQ_SUNJMX_START -Dcom.sun.management.jmxremote"

    # Set jvm jmx configuration for controlling the broker process
    # You only have to configure the first four settings if you run a ibm jvm, caused by the
    # fact that IBM's jvm does not support VirtualMachine.attach(PID)
    # (see also com.sun.management.jmxremote.port, .jmx.password.file and .jmx.access.file )
    #ACTIVEMQ_SUNJMX_CONTROL="--jmxurl service:jmx:rmi:///jndi/rmi://127.0.0.1:1099/jmxrmi --jmxuser controlRole --jmxpassword abcd1234"
    ACTIVEMQ_SUNJMX_CONTROL=""

    # Specify the queue manager URL for using "browse" option of sysv initscript
    if [ -z "$ACTIVEMQ_QUEUEMANAGERURL" ]; then
        ACTIVEMQ_QUEUEMANAGERURL="--amqurl tcp://localhost:61616"
    fi

    # Set additional JSE arguments
    if [ -z "$ACTIVEMQ_SSL_OPTS" ] ; then
        #ACTIVEMQ_SSL_OPTS="-Djava.security.properties=$ACTIVEMQ_CONF/java.security"
        ACTIVEMQ_SSL_OPTS=""
    fi

    # Uncomment to enable remote debugging
    #ACTIVEMQ_DEBUG_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"

    # ActiveMQ tries to shutdown the broker by jmx,
    # after a specified number of seconds send SIGKILL
    if [ -z "$ACTIVEMQ_KILL_MAXSECONDS" ]; then
        ACTIVEMQ_KILL_MAXSECONDS=30
    fi

    # Configure a user with non root privileges, if no user is specified do not change user
    # (the entire activemq installation should be owned by this user)
    ACTIVEMQ_USER=""

    # location of the pidfile
    # ACTIVEMQ_PIDFILE="$ACTIVEMQ_DATA/activemq.pid"

    # Location of the java installation
    # Specify the location of your java installation using JAVA_HOME, or specify the
    # path to the "java" binary using JAVACMD
    # (set JAVACMD to "auto" for automatic detection)
    #JAVA_HOME=""
    JAVACMD="auto"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: activemq
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: activemq
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: activemq
        #  version note
        #  -db: jdbc
        #  -journal: jdbc journal
        #  -kaha: kaha db
        image: localhost:5000/activemq:v5.16.0-journal
        imagePullPolicy: Always
        readinessProbe:
          tcpSocket:
            port: 61616
          initialDelaySeconds: 15
          periodSeconds: 15
        livenessProbe:
          tcpSocket:
            port: 61616
          initialDelaySeconds: 30
          periodSeconds: 15
        env:
        - name: amq_db_host
          value: "vnt-dev-sql01.database.windows.net"
        - name: amq_db_port
          value: "1433"
        - name: amq_db_name
          value: "Dev_AMQ"
        - name: amq_db_uid
          value: "amq_dev_user"
        - name: amq_db_pwd
          value: "5m#D!xj*T2yp!"
        - name: amq_db_poolpreparedstatements
          value: "true"
        - name: amq_db_initialsize
          value: "16"
        - name: amq_db_maxtotal
          value: "16"  
        - name: amq_db_maxidle
          value: "16"
        - name: amq_db_minidle
          value: "16"
        - name: amq_db_maxwaitmillis
          value: "15000"
        - name: amq_db_validationquery
          value: "select 1"
        - name: amq_db_validationquerytimeout
          value: "5" 
        - name: amq_db_testonborrow
          value: "true"
        - name: amq_db_testwhileidle
          value: "true"
        - name: amq_db_timebetweenevictionrunsmillis
          value: "500"
        - name: amq_db_numtestsperevictionrun
          value: "1"
        - name: amq_max_heap
          value: "1024M"
        - name: amq_start_heap
          value: "1024M"
        - name: amq_jms_max_connections
          value: "1000"
        - name: amq_jms_wire_format_max_frame_size
          value: "104857600"
        ports:
        - containerPort: 80
          name: jmx
          protocol: TCP
        - containerPort: 61616
          name: amq
          protocol: TCP
        resources:
          requests:
            cpu: 750m
        volumeMounts:
          - mountPath: /apache-activemq-5.16.0/conf/activemq.xml
            name: amq-config-volume
            subPath: activemq.xml
          - mountPath: /apache-activemq-5.16.0/bin/env
            name: amq-config-volume
            subPath: env
      volumes:
        - name: amq-config-volume
          configMap:
            name: amq-config
  selector:
    matchLabels:
      app: activemq
---
apiVersion: v1
kind: Service
metadata:
  name: activemq
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    service.beta.kubernetes.io/azure-load-balancer-tcp-idle-timeout: "10"
spec:
  type: ClusterIP
  ports:
  - port: 61616
    name: jms
  - port: 80
    name: admin
  selector:
    app: activemq
