apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    labels:
      app: keycloak
    name: keycloak-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  annotations:
    sidecar.istio.io/inject: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: docker.io/jboss/keycloak:8.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KEYCLOAK_USER
          value: admin
        - name: KEYCLOAK_PASSWORD
          value: admin
        - name: DB_VENDOR
          value: postgres
        - name: DB_ADDR
          value: postgres
        - name: DB_USER
          value: anaximander
        - name: DB_PASSWORD
          value: demo123
        livenessProbe:
          httpGet:
            path: /auth
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /auth
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /opt/jboss/keycloak/standalone/data
          name: keycloak-data
          readOnly: false
      volumes:
      - name: keycloak-data
        persistentVolumeClaim:
          claimName: keycloak-data
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
spec:
  ports:
  - name: http
    port: 8080
  - name: https
    port: 8443
  type: NodePort
  selector:
    app: keycloak
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: keycloak-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
        - path: /keycloak
          backend:
            serviceName: keycloak
            servicePort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-keycloak-config
  labels:
    app: postgres
data:
  POSTGRES_DB: keycloak
  POSTGRES_USER: anaximander
  POSTGRES_PASSWORD: demo123
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: postgres
  type: NodePort
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-keycloak
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        envFrom:
          - configMapRef:
              name: postgres-keycloak-config
        ports:
        - containerPort: 5432
          name: postgredb
        volumeMounts:
        - name: postgredb
          mountPath: /var/lib/postgresql/data
          subPath: postgres
  volumeClaimTemplates:
  - metadata:
      name: postgredb
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 3Gi
